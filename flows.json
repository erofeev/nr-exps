[
    {
        "id": "ad23bd66d9ba1ebc",
        "type": "tab",
        "label": "Video from Onvif",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0a5ac1dcb64b7376",
        "type": "tab",
        "label": "Local broker",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7dad7a056c3e824a",
        "type": "tab",
        "label": "Systemd",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "244d1c7c92f9ed23",
        "type": "tab",
        "label": "NR-thing",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ef8a80e9c499bb4e",
        "type": "subflow",
        "name": "Zip-64",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 160,
                "wires": [
                    {
                        "id": "2b65109daddacd99"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 660,
                "y": 160,
                "wires": [
                    {
                        "id": "82c8c3f3ba6e95db",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "2b65109daddacd99",
        "type": "json",
        "z": "ef8a80e9c499bb4e",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 170,
        "y": 160,
        "wires": [
            [
                "065c1f970061c074"
            ]
        ]
    },
    {
        "id": "065c1f970061c074",
        "type": "zip",
        "z": "ef8a80e9c499bb4e",
        "name": "",
        "mode": "compress",
        "filename": "",
        "compressionlevel": "9",
        "outasstring": false,
        "x": 320,
        "y": 160,
        "wires": [
            [
                "82c8c3f3ba6e95db"
            ]
        ]
    },
    {
        "id": "82c8c3f3ba6e95db",
        "type": "base64",
        "z": "ef8a80e9c499bb4e",
        "name": "",
        "action": "",
        "property": "payload",
        "x": 500,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "e24401fbd1d10059",
        "type": "exec",
        "z": "ad23bd66d9ba1ebc",
        "command": "ffmpeg -f rtsp -i \"rtsp://192.168.1.166:554/stream.sdp\" -f image2pipe pipe:1",
        "addpay": false,
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Decode RTSP stream",
        "x": 640,
        "y": 440,
        "wires": [
            [
                "b8b8225b596d722b"
            ],
            [],
            []
        ]
    },
    {
        "id": "60aaa246fc59eb74",
        "type": "inject",
        "z": "ad23bd66d9ba1ebc",
        "name": "Start stream",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 440,
        "wires": [
            [
                "e24401fbd1d10059"
            ]
        ]
    },
    {
        "id": "b8b8225b596d722b",
        "type": "image",
        "z": "ad23bd66d9ba1ebc",
        "name": "",
        "width": "400",
        "data": "payload",
        "dataType": "msg",
        "thumbnail": false,
        "active": true,
        "pass": false,
        "outputs": 0,
        "x": 870,
        "y": 420,
        "wires": []
    },
    {
        "id": "6709590698aec4c4",
        "type": "inject",
        "z": "ad23bd66d9ba1ebc",
        "name": "Pause all streams",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "SIGSTOP",
        "payloadType": "str",
        "x": 170,
        "y": 480,
        "wires": [
            [
                "a5d9f6ed392f938f"
            ]
        ]
    },
    {
        "id": "b0f0bea8b2498b9e",
        "type": "inject",
        "z": "ad23bd66d9ba1ebc",
        "name": "Resume all streams",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "SIGCONT",
        "payloadType": "str",
        "x": 170,
        "y": 520,
        "wires": [
            [
                "a5d9f6ed392f938f"
            ]
        ]
    },
    {
        "id": "a5d9f6ed392f938f",
        "type": "change",
        "z": "ad23bd66d9ba1ebc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "kill",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 480,
        "wires": [
            [
                "e24401fbd1d10059"
            ]
        ]
    },
    {
        "id": "7b8259a61f72f811",
        "type": "inject",
        "z": "ad23bd66d9ba1ebc",
        "name": "Stop all streams",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "SIGTERM",
        "payloadType": "str",
        "x": 160,
        "y": 560,
        "wires": [
            [
                "a5d9f6ed392f938f"
            ]
        ]
    },
    {
        "id": "46cf100259112d0b",
        "type": "inject",
        "z": "ad23bd66d9ba1ebc",
        "name": "Start searching",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 660,
        "wires": [
            [
                "05c30ea4192cd11a"
            ]
        ]
    },
    {
        "id": "477452a55992e768",
        "type": "debug",
        "z": "ad23bd66d9ba1ebc",
        "name": "Onvif devices",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.XAddrs",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 660,
        "wires": []
    },
    {
        "id": "05c30ea4192cd11a",
        "type": "onvif-discovery",
        "z": "ad23bd66d9ba1ebc",
        "name": "",
        "timeout": "10",
        "separate": true,
        "x": 370,
        "y": 660,
        "wires": [
            [
                "477452a55992e768"
            ]
        ]
    },
    {
        "id": "6a15f912273b7310",
        "type": "config",
        "z": "ad23bd66d9ba1ebc",
        "name": "",
        "properties": [
            {
                "p": "thing.id",
                "pt": "flow",
                "to": "onvif:000-000-001",
                "tot": "str"
            },
            {
                "p": "thing.type",
                "pt": "flow",
                "to": "onvif",
                "tot": "str"
            },
            {
                "p": "thing.rtsp_url",
                "pt": "flow",
                "to": "",
                "tot": "str"
            }
        ],
        "active": true,
        "x": 350,
        "y": 140,
        "wires": []
    },
    {
        "id": "cb55b82ff1831db4",
        "type": "link in",
        "z": "ad23bd66d9ba1ebc",
        "name": "Startup",
        "links": [
            "7fd78dc7b1f6d400"
        ],
        "x": 185,
        "y": 140,
        "wires": [
            [
                "6a15f912273b7310",
                "ed9c805b277886bc"
            ]
        ]
    },
    {
        "id": "ed9c805b277886bc",
        "type": "function",
        "z": "ad23bd66d9ba1ebc",
        "name": "Get device config",
        "func": "msg.payload = flow.get('thing');\nmsg.topic = flow.get('thing.id') + '/config';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 200,
        "wires": [
            [
                "2ee7d7c6e6cb2b90",
                "1d1dda9e6cd73349"
            ]
        ]
    },
    {
        "id": "2ee7d7c6e6cb2b90",
        "type": "link out",
        "z": "ad23bd66d9ba1ebc",
        "name": "Send out config",
        "mode": "link",
        "links": [
            "0c0aceacf53dbdb2"
        ],
        "x": 595,
        "y": 200,
        "wires": []
    },
    {
        "id": "48c0cad249bb0bd3",
        "type": "comment",
        "z": "ad23bd66d9ba1ebc",
        "name": "Systemd event: local MQTT is up and running",
        "info": "",
        "x": 230,
        "y": 80,
        "wires": []
    },
    {
        "id": "ab1ccc6060ed9ec9",
        "type": "comment",
        "z": "ad23bd66d9ba1ebc",
        "name": "MQTT cmd:",
        "info": "",
        "x": 130,
        "y": 260,
        "wires": []
    },
    {
        "id": "fd52a5a3f8150eea",
        "type": "link in",
        "z": "ad23bd66d9ba1ebc",
        "name": "000-onvif-cam-001/cmd",
        "links": [],
        "x": 85,
        "y": 320,
        "wires": [
            [
                "98c921b4ad0436f4"
            ]
        ]
    },
    {
        "id": "dbe54dabd3af311c",
        "type": "link out",
        "z": "ad23bd66d9ba1ebc",
        "name": "link out 2",
        "mode": "return",
        "links": [],
        "x": 575,
        "y": 320,
        "wires": []
    },
    {
        "id": "98c921b4ad0436f4",
        "type": "switch",
        "z": "ad23bd66d9ba1ebc",
        "name": "",
        "property": "payload.cmd",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Stop",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 210,
        "y": 320,
        "wires": [
            [
                "2578c9c776b0b5bb"
            ],
            [
                "fa66381b69b5290f"
            ]
        ]
    },
    {
        "id": "2578c9c776b0b5bb",
        "type": "function",
        "z": "ad23bd66d9ba1ebc",
        "name": "cmd = Start",
        "func": "msg.payload = \"Started\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 300,
        "wires": [
            [
                "41999a673447a990"
            ]
        ]
    },
    {
        "id": "fa66381b69b5290f",
        "type": "function",
        "z": "ad23bd66d9ba1ebc",
        "name": "cmd = Stop",
        "func": "msg.payload = \"Stopped\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 340,
        "wires": [
            [
                "dbe54dabd3af311c"
            ]
        ]
    },
    {
        "id": "1d1dda9e6cd73349",
        "type": "function",
        "z": "ad23bd66d9ba1ebc",
        "name": "Status = Ready",
        "func": "msg.topic = flow.get('thing.id') + '/status';\nmsg.payload = \"READY\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 240,
        "wires": [
            [
                "2ee7d7c6e6cb2b90"
            ]
        ]
    },
    {
        "id": "41999a673447a990",
        "type": "wifiscan",
        "z": "ad23bd66d9ba1ebc",
        "name": "",
        "x": 410,
        "y": 580,
        "wires": [
            [
                "dbe54dabd3af311c"
            ]
        ]
    },
    {
        "id": "d39a2a12003b3d0c",
        "type": "mqtt out",
        "z": "0a5ac1dcb64b7376",
        "name": "Local MQTT",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "4bd4c4a3bf0645b2",
        "x": 950,
        "y": 300,
        "wires": []
    },
    {
        "id": "0c0aceacf53dbdb2",
        "type": "link in",
        "z": "0a5ac1dcb64b7376",
        "name": "Send_to_local_MQTT",
        "links": [
            "2ee7d7c6e6cb2b90",
            "44dcc6e937ddcf2f",
            "d0ebda896319b268"
        ],
        "x": 355,
        "y": 300,
        "wires": [
            [
                "b222876faf3dbe44"
            ]
        ]
    },
    {
        "id": "7a03b0e09e17a739",
        "type": "link call",
        "z": "0a5ac1dcb64b7376",
        "name": "Send cmd to executor",
        "links": [],
        "linkType": "dynamic",
        "timeout": "3",
        "x": 700,
        "y": 520,
        "wires": [
            [
                "31ab7a164df227b3"
            ]
        ]
    },
    {
        "id": "605ff753aaa2ec37",
        "type": "mqtt in",
        "z": "0a5ac1dcb64b7376",
        "name": "",
        "topic": "+/cmd",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "4bd4c4a3bf0645b2",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 110,
        "y": 520,
        "wires": [
            [
                "e92e95bfe589b71a"
            ]
        ]
    },
    {
        "id": "7efe4d813240b6e5",
        "type": "debug",
        "z": "0a5ac1dcb64b7376",
        "name": "DBG: MQTT CMD received",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "target",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 560,
        "wires": []
    },
    {
        "id": "31ab7a164df227b3",
        "type": "function",
        "z": "0a5ac1dcb64b7376",
        "name": "Set result: /status ",
        "func": "if (!msg.target) {\n    return;\n}\nmsg.target = msg.topic;\n\nconst match = '\\/cmd$';\nconst modifier = \"i\";\nconst pattern = new RegExp(match, modifier);\n\nmsg.topic = msg.target.replace(pattern, '/status');\n\nif (msg.error) {\n    msg.payload = msg.error.message + ' cmd=' + JSON.stringify(msg.payload);\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 400,
        "wires": [
            [
                "d39a2a12003b3d0c"
            ]
        ]
    },
    {
        "id": "98cdc9feea4db013",
        "type": "catch",
        "z": "0a5ac1dcb64b7376",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 120,
        "y": 400,
        "wires": [
            [
                "12e05052ec68dc2b",
                "31ab7a164df227b3"
            ]
        ]
    },
    {
        "id": "fb8852506dcc978d",
        "type": "mqtt in",
        "z": "0a5ac1dcb64b7376",
        "name": "",
        "topic": "+/+/cmd",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "4bd4c4a3bf0645b2",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 600,
        "wires": [
            [
                "e92e95bfe589b71a"
            ]
        ]
    },
    {
        "id": "688bd8fae41ef688",
        "type": "aedes broker",
        "z": "0a5ac1dcb64b7376",
        "name": "",
        "mqtt_port": 1883,
        "mqtt_ws_bind": "port",
        "mqtt_ws_port": "",
        "mqtt_ws_path": "",
        "cert": "",
        "key": "",
        "certname": "",
        "keyname": "",
        "dburl": "",
        "usetls": false,
        "x": 150,
        "y": 40,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "f66169967adecccd",
        "type": "status",
        "z": "0a5ac1dcb64b7376",
        "name": "Status of [MQTT out] node",
        "scope": [
            "688bd8fae41ef688"
        ],
        "x": 170,
        "y": 140,
        "wires": [
            [
                "6e2c4bf97dc377c7"
            ]
        ]
    },
    {
        "id": "6e2c4bf97dc377c7",
        "type": "switch",
        "z": "0a5ac1dcb64b7376",
        "name": "if connected",
        "property": "status.text",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "node-red:common.status.connected",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 390,
        "y": 140,
        "wires": [
            [
                "522595dc6450492c"
            ]
        ]
    },
    {
        "id": "f11d4ba78ac67aba",
        "type": "link out",
        "z": "0a5ac1dcb64b7376",
        "name": "Notify Systemd",
        "mode": "link",
        "links": [
            "3379f24a2db7b97f"
        ],
        "x": 755,
        "y": 200,
        "wires": []
    },
    {
        "id": "f65c24a2e8699276",
        "type": "function",
        "z": "0a5ac1dcb64b7376",
        "name": "Set broker id and Notify to Systemd",
        "func": "const serialId = msg.payload.replace(/\\0.*$/, \"\");\n\nif (serialId) {\n    global.set(\"broker.id\", serialId);\n    msg.payload = \"local_MQTT_broker_is_up [\" + serialId + ']';\n    return msg;\n}\n\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 200,
        "wires": [
            [
                "f11d4ba78ac67aba"
            ]
        ]
    },
    {
        "id": "522595dc6450492c",
        "type": "file in",
        "z": "0a5ac1dcb64b7376",
        "name": "",
        "filename": "/sys/firmware/devicetree/base/serial-number",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 670,
        "y": 140,
        "wires": [
            [
                "f65c24a2e8699276"
            ]
        ]
    },
    {
        "id": "12e05052ec68dc2b",
        "type": "debug",
        "z": "0a5ac1dcb64b7376",
        "name": "Flow errors",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 330,
        "y": 400,
        "wires": []
    },
    {
        "id": "b222876faf3dbe44",
        "type": "function",
        "z": "0a5ac1dcb64b7376",
        "name": "Add /broker-id",
        "func": "msg.topic = global.get(\"broker.id\") + \"/\" + msg.topic;\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 300,
        "wires": [
            [
                "0fe1e5eb67cef2d4"
            ]
        ]
    },
    {
        "id": "0fe1e5eb67cef2d4",
        "type": "function",
        "z": "0a5ac1dcb64b7376",
        "name": "Set retained for /config",
        "func": "const match = '\\/config$';\nconst topic = msg.topic;\nconst found = topic.match(match);\n\nif (found) {\n    msg.qos = 2;\n    msg.retain = true;\n}\ndelete msg.topic;\nmsg.topic = topic;//\"rpi10000000ffebcc55/000-onvif-cam-001/config\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 300,
        "wires": [
            [
                "d39a2a12003b3d0c"
            ]
        ]
    },
    {
        "id": "e92e95bfe589b71a",
        "type": "function",
        "z": "0a5ac1dcb64b7376",
        "name": "Remove broker namespace and set target",
        "func": "const match = new RegExp('^' + global.get(\"broker.id\") + '/');\nconst topic = msg.topic.replace(match, \"\");\nmsg.target = topic;\n\nreturn  msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 520,
        "wires": [
            [
                "7a03b0e09e17a739",
                "7efe4d813240b6e5"
            ]
        ]
    },
    {
        "id": "a5483cba60e1e74b",
        "type": "comment",
        "z": "0a5ac1dcb64b7376",
        "name": "On boot (when MQTT broker becomes accessible) we send notification to Systemd",
        "info": "",
        "x": 350,
        "y": 100,
        "wires": []
    },
    {
        "id": "9e56d6f66f14364d",
        "type": "comment",
        "z": "0a5ac1dcb64b7376",
        "name": "Publisher interface",
        "info": "",
        "x": 150,
        "y": 260,
        "wires": []
    },
    {
        "id": "1da4282812077bda",
        "type": "comment",
        "z": "0a5ac1dcb64b7376",
        "name": "Report error status of cmd execution",
        "info": "",
        "x": 200,
        "y": 360,
        "wires": []
    },
    {
        "id": "e56a58b82d7ed0ec",
        "type": "comment",
        "z": "0a5ac1dcb64b7376",
        "name": "Subscribe for cmd, execute and report user status of cmd execution",
        "info": "",
        "x": 300,
        "y": 480,
        "wires": []
    },
    {
        "id": "3379f24a2db7b97f",
        "type": "link in",
        "z": "7dad7a056c3e824a",
        "name": "Systemd Events",
        "links": [
            "f11d4ba78ac67aba"
        ],
        "x": 355,
        "y": 340,
        "wires": [
            [
                "b233b21f97fd0586"
            ]
        ]
    },
    {
        "id": "7fd78dc7b1f6d400",
        "type": "link out",
        "z": "7dad7a056c3e824a",
        "name": "Stage - MQTT broker is UP",
        "mode": "link",
        "links": [
            "cb55b82ff1831db4",
            "ae96a900f52429fb"
        ],
        "x": 695,
        "y": 140,
        "wires": []
    },
    {
        "id": "a685559a453cb2db",
        "type": "comment",
        "z": "7dad7a056c3e824a",
        "name": "Local MQTT broker is up, send notifications",
        "info": "",
        "x": 740,
        "y": 100,
        "wires": []
    },
    {
        "id": "b233b21f97fd0586",
        "type": "switch",
        "z": "7dad7a056c3e824a",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "local_MQTT_broker_is_up",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 450,
        "y": 340,
        "wires": [
            [
                "7fd78dc7b1f6d400",
                "7bc41172cc2c35d1"
            ]
        ]
    },
    {
        "id": "7bc41172cc2c35d1",
        "type": "debug",
        "z": "7dad7a056c3e824a",
        "name": "DBG: Systemd Events",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 40,
        "wires": []
    },
    {
        "id": "2ecd957924ab53da",
        "type": "config",
        "z": "244d1c7c92f9ed23",
        "name": "",
        "properties": [
            {
                "p": "thing.id",
                "pt": "flow",
                "to": "node-red:000-000-001",
                "tot": "str"
            },
            {
                "p": "thing.type",
                "pt": "flow",
                "to": "node-red",
                "tot": "str"
            }
        ],
        "active": true,
        "x": 330,
        "y": 100,
        "wires": []
    },
    {
        "id": "ae96a900f52429fb",
        "type": "link in",
        "z": "244d1c7c92f9ed23",
        "name": "Startup",
        "links": [
            "7fd78dc7b1f6d400"
        ],
        "x": 165,
        "y": 100,
        "wires": [
            [
                "2ecd957924ab53da",
                "914739e285571d1a"
            ]
        ]
    },
    {
        "id": "d9c1a6e37b884cf3",
        "type": "function",
        "z": "244d1c7c92f9ed23",
        "name": "Get device config",
        "func": "msg.topic = flow.get('thing.id') + '/config';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 160,
        "wires": [
            [
                "d0ebda896319b268",
                "ed0b91cbe912541f"
            ]
        ]
    },
    {
        "id": "d0ebda896319b268",
        "type": "link out",
        "z": "244d1c7c92f9ed23",
        "name": "Send out config",
        "mode": "link",
        "links": [
            "0c0aceacf53dbdb2"
        ],
        "x": 685,
        "y": 160,
        "wires": []
    },
    {
        "id": "ed0b91cbe912541f",
        "type": "function",
        "z": "244d1c7c92f9ed23",
        "name": "Status = Ready",
        "func": "msg.topic = flow.get('thing.id') + '/status';\nmsg.payload = \"READY\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 200,
        "wires": [
            [
                "d0ebda896319b268"
            ]
        ]
    },
    {
        "id": "914739e285571d1a",
        "type": "http request",
        "z": "244d1c7c92f9ed23",
        "name": "Get all flows",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "localhost:1880/flows",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "Node-RED-API-Version",
                "valueType": "other",
                "valueValue": "v2"
            }
        ],
        "x": 290,
        "y": 160,
        "wires": [
            [
                "d9c1a6e37b884cf3"
            ]
        ]
    },
    {
        "id": "97a1788f30bd8ac5",
        "type": "comment",
        "z": "244d1c7c92f9ed23",
        "name": "MQTT cmd:",
        "info": "",
        "x": 210,
        "y": 280,
        "wires": []
    },
    {
        "id": "d61cd4f325847874",
        "type": "link in",
        "z": "244d1c7c92f9ed23",
        "name": "node-red:000-000-001/cmd",
        "links": [],
        "x": 165,
        "y": 340,
        "wires": [
            [
                "670cb22e39c0d632"
            ]
        ]
    },
    {
        "id": "3425f2cc13bd6388",
        "type": "link out",
        "z": "244d1c7c92f9ed23",
        "name": "link out 3",
        "mode": "return",
        "links": [],
        "x": 765,
        "y": 340,
        "wires": []
    },
    {
        "id": "670cb22e39c0d632",
        "type": "switch",
        "z": "244d1c7c92f9ed23",
        "name": "",
        "property": "payload.cmd",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "execute",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 270,
        "y": 340,
        "wires": [
            [
                "77c23579e0ae95c7"
            ]
        ]
    },
    {
        "id": "77c23579e0ae95c7",
        "type": "function",
        "z": "244d1c7c92f9ed23",
        "name": "cmd = Execute",
        "func": "msg.payload = msg.payload.data.flows;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 340,
        "wires": [
            [
                "5eb406c2febcc77c"
            ]
        ]
    },
    {
        "id": "5eb406c2febcc77c",
        "type": "http request",
        "z": "244d1c7c92f9ed23",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "localhost:1880/flows",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "Content-type",
                "valueType": "other",
                "valueValue": "application/json"
            },
            {
                "keyType": "other",
                "keyValue": "Node-RED-API-Version",
                "valueType": "other",
                "valueValue": "v1"
            },
            {
                "keyType": "other",
                "keyValue": "Node-RED-Deployment-Type",
                "valueType": "other",
                "valueValue": "full"
            }
        ],
        "x": 630,
        "y": 340,
        "wires": [
            [
                "3425f2cc13bd6388"
            ]
        ]
    }
]